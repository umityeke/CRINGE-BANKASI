rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isSignedIn() {
      return request.auth != null;
    }

    // Kullanıcı profilleri
    match /users/{userId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn() && request.auth.uid == userId;
      allow update, delete: if isSignedIn() && request.auth.uid == userId;
    }

    // Entry koleksiyonu
    match /cringe_entries/{entryId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn() && request.resource.data.userId == request.auth.uid;
      allow update, delete: if isSignedIn() && resource.data.userId == request.auth.uid;
    }

    // Yarışmalar ve diğer herkese açık veriler
    match /competitions/{document=**} {
      allow read: if isSignedIn();
      allow write: if isSignedIn();
    }

    match /leaderboard/{document=**} {
      allow read: if isSignedIn();
      allow write: if false;
    }

    match /trade_proposals/{proposalId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn();
      allow update, delete: if isSignedIn() &&
        (request.auth.uid == resource.data.fromUserId || request.auth.uid == resource.data.toUserId);
    }

    match /user_activity/{userId} {
      allow read, write: if isSignedIn() && request.auth.uid == userId;
    }

    match /auth_logs/{document=**} {
      allow create: if isSignedIn();
      allow read, update, delete: if false;
    }

    match /settings/{document=**} {
      allow read: if isSignedIn();
      allow write: if false;
    }

    // Diğer tüm koleksiyonlar için varsayılan
    match /{document=**} {
      allow read, write: if isSignedIn();
    }
  }
}